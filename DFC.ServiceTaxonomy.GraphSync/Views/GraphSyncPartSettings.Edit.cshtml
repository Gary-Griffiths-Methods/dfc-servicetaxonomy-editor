@model DFC.ServiceTaxonomy.GraphSync.Settings.GraphSyncPartSettingsViewModel

<fieldset class="form-group">
    <div class="row col-sm-6">
        <label asp-for="NamespacePrefix">@T["Namespace prefix"]</label>
        <input asp-for="NamespacePrefix" class="form-control" list="namespace-prefixes" />
        @*No aspnetcore tag helper for this yet, compose new component out of bootstrap component, or use 3rd party component? the only ones i've found are not free. vue multiselect*@
        <datalist id="namespace-prefixes">
            @foreach (string namespacePrefix in Model.NamespacePrefixOptions!)
            {
                <option>@namespacePrefix</option>
            }
        </datalist>
        <span class="hint">@T["The namespace to use to prefix generated ID's."]</span>
    </div>
</fieldset>

<fieldset class="form-group">
    <div class="row col-md">
        <label asp-for="BagPartContentItemRelationshipType">@T["BagPart ContentItem relationship type"]</label>
        <input asp-for="BagPartContentItemRelationshipType" class="form-control" />
        <span class="hint">@T["If the containing content type is stored in a BagPart, the type of relationship to create in the graph."]</span>
    </div>
</fieldset>

<fieldset class="form-group">
    <div class="custom-control custom-checkbox">
        <input asp-for="PreexistingNode" type="checkbox" class="custom-control-input" />
        <label class="custom-control-label" asp-for="PreexistingNode">@T["Preexisting node"]</label>
        <span class="hint">â€” @T["Check if the containing content type represents a node already in the graph. If selected, the existing node will not be modified (but relationships will still be created)."]</span>
    </div>

<fieldset class="form-group">
    <div class="row col-md">
        <label asp-for="NodeNameTransform">@T["Node name transform"]</label>
        <input asp-for="NodeNameTransform" class="form-control" />
        <span class="hint">@T["If supplied, c# code to transform the node name (accessible through the variable named 'Value')."]</span>
    </div>
</fieldset>

<fieldset class="form-group">
    <div class="row col-md">
        <label asp-for="PropertyNameTransform">@T["Property name transform"]</label>
        <input asp-for="PropertyNameTransform" class="form-control" />
        <span class="hint">@T["If supplied, c# code to transform property names (accessible through the variable named 'Value')."]</span>
    </div>
</fieldset>

<fieldset class="form-group">
    <div class="row col-md">
        <label asp-for="IdPropertyName">@T["ID property name"]</label>
        <input asp-for="IdPropertyName" class="form-control" />
        <span class="hint">@T["The name (key) of the ID property on the node."]</span>
    </div>

<fieldset class="form-group">
    <div class="row col-md">
        <label asp-for="IdPropertyValueTransform">@T["ID value transform"]</label>
        <input asp-for="IdPropertyValueTransform" class="form-control" />
        <span class="hint">@T["If supplied, c# code to transform ID values (accessible through the variable named 'Value')."]</span>
    </div>
</fieldset>

</fieldset>


</fieldset>
