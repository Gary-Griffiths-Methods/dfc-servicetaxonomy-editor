@using OrchardCore.ContentManagement
@using OrchardCore.ContentManagement.Metadata
@using OrchardCore.Mvc.Utilities

@inject IContentDefinitionManager ContentDefinitionManager

@{
    ContentItem contentItem = Model.ContentItem;
    var contentTypeDefinition = ContentDefinitionManager.GetTypeDefinition(contentItem.ContentType);
    var typeDisplayName = contentTypeDefinition?.DisplayName ?? contentItem.ContentType.CamelFriendly();
}

<h1>@RenderTitleSegments(T["Edit {0}", typeDisplayName])</h1>

<form asp-action="Edit" asp-route-returnUrl="@Context.Request.Query["ReturnUrl"]" method="post" enctype="multipart/form-data">
    @Html.ValidationSummary()
    @await DisplayAsync(Model)

    <input type="hidden" name="TaxonomyContentItemId" value="@Model.TaxonomyContentItemId" />
    <input type="hidden" name="TaxonomyItemId" value="@Model.TaxonomyItemId" />
</form>

@if (contentTypeDefinition?.DisplayName == "Page Location")
{
    <script depends-on="jQuery" at="Foot">
        $(function () {
            var $titleInput = $('input[name="TitlePart.Title"]');
            var $form = $titleInput.closest('form');

            var initialTitle = $titleInput.val();

            $form.on('submit', function (e) {
                e.preventDefault();

                var currentTitle = $titleInput.val();

                if (initialTitle !== currentTitle) {
                    confirmDialog({
                        title: 'Warning',
                        message: 'Any associated pages will automatically have their URLs updated to reflect this change, are you sure you want to continue?',
                        callback: function callback(r) {
                            if (r) {
                                $form.unbind().submit();
                            }
                        }
                    });
                }
                else {
                    $form.unbind().submit();
                }
            });
        });
    </script>
}
